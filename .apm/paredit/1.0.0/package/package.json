{"name":"paredit","main":"./lib/paredit","version":"1.0.0","description":"Paredit on atom","activationEvents":["paredit:forward-slurp","paredit:forward-barf","paredit:backward-slurp","paredit:backward-barf","paredit:raise-sexp","paredit:next-form","paredit:kill-line"],"repository":{"type":"git","url":"https://github.com/marcopolo/atom-paredit"},"license":"MIT","engines":{"atom":">=0.190.0 <2.0.0"},"dependencies":{},"readme":"[![Stories in Ready](https://badge.waffle.io/MarcoPolo/atom-paredit.png?label=ready&title=Ready)](https://waffle.io/MarcoPolo/atom-paredit)\n# Atom Paredit\n\nBrings Paredit to atom!\n\n![A screenshot of your spankin' package](http://cl.ly/image/0w2o1j0E0r0E/Screen%20Shot%202014-07-16%20at%208.19.36%20PM.png)\n\n\n## What's implemented\n\nForward Barf  `C-left`  \nForward Slurp `C-right`  \n\nBackward Barf `C-M-right`  \nBackward Slurp `C-M-left`  \n\nKill to end of line `C-k`  \nRaise expression `M-r`  \n\nM = Meta which may be your alt/option key.\n\n## What's left\n\nThe rest of the paredit commands.  \nGetting Existing commands to work with \"\"\n\n## Contributing\n\nYes please!  \n\nIf your command isn't implemented, make an issue and begin\ntell everyone else you are working on it.\n\nIf you want to get a feel for the codebase, but don't think\nyou can contribute just yet, we need tests on existing\nfunctionality. The core is written with a handful of functions\nthat can easily be mocked. Look at `core-test.cljs` for the\nmocks.\n\nIf in doubt open an issue and we can talk about it.\n\nThis is part of a bigger endeavor to build an\namazing Clojure IDE within atom. Contact me if you\nare interested in working on that as well.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/marcopolo/atom-paredit/issues"},"homepage":"https://github.com/marcopolo/atom-paredit","_id":"paredit@1.0.0","_shasum":"a817db714e5e5e904541b2cf0e5c9e9cec9d3c8a","_resolved":"file:../d-115321-15727-11rld30/package.tgz","_from":"../d-115321-15727-11rld30/package.tgz"}